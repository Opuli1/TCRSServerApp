@page "/admin/manage-users"

@using Microsoft.EntityFrameworkCore
@using TCRSServerApp.Data

@inject NavigationManager NavigationManager
@inject TCRSContext _context

@attribute [Authorize]

<PageTitle>Manage Users | TCRS App</PageTitle>
<div class="container">
    <div class="d-flex justify-content-between align-items-center">
        <h3>Manage Users</h3>

        <button class="btn btn-primary btn-sm" @onclick="CreateUser">+ Create New User</button>
    </div>

    <div class="spacer-blue"></div>

    @if(users == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    } else if(users.Count == 0)
    {
        <p>No Users Found...</p>
    } else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Email</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Created/Edited</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach(var user in users)
                {
                    <tr>
                        <td>@user.UserId</td>
                        <td>@user.Email</td>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>
                            @(user.EditedOn.HasValue
                                ? user.EditedOn.Value.ToShortDateString()
                                : user.CreatedOn.ToShortDateString())
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary btn-sm text-decoration-underline" @onclick="()=> EditUser(user.UserId)">Edit</button>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm text-decoration-underline" @onclick="()=> DeleteUser(user.UserId)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<User> users;

    protected override async Task OnInitializedAsync()
    {
        users = await _context.Users.ToListAsync();
    }

    private void CreateUser()
    {
        NavigationManager.NavigateTo("/admin/manage-users/new");
    }

    private void EditUser(int userId)
    {
        NavigationManager.NavigateTo($"/admin/manage-users/edit/{userId}");
    }

    private async Task DeleteUser(int userId)
    {
        var user = await _context.Users.FindAsync(userId);

        if(user != null)
        {
            _context.Users.Remove(user);

            await _context.SaveChangesAsync();

            users.Remove(user);

            StateHasChanged();
        }
    }
}