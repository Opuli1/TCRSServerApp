@inject CategoryService CategoryService

<EditForm Model="_categoryModel" OnValidSubmit="SaveCategoryAsync">
    <DataAnnotationsValidator />

    <div class="card border-0">
        <div class="card-header rounded-0 bg-blue text-light d-flex justify-content-between align-items-center" style="min-width: 250px">
            <h4>Save Category</h4>

            <button type="button" class="btn btn-sm btn-danger">X</button>
        </div>
        <div class="card-body">
            <div class="mb-3">
                <label class="form-label">Name: </label>
                <InputText @bind-Value="_categoryModel.Name" class="form-control" placeholder="Category Name" />
                <ValidationMessage For="()=> _categoryModel.Name" />
            </div>
            <div class="mb-3">
                <label class="form-label">Slug: </label>
                <InputText @bind-Value="_categoryModel.Slug" class="form-control" placeholder="Category Slug" />
                <ValidationMessage For="()=> _categoryModel.Slug" />
            </div>
        </div>
        <div class="card-footer d-flex justify-content-between align-items-center">
            <button type="button" class="btn btn-sm btn-default">Cancel</button>
            <button type="submit" class="btn btn-sm btn-primary">Save</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public EventCallback<MethodResult> OnSaveCategory { get; set; }

    private Category _categoryModel = new();

    private async Task SaveCategoryAsync()
    {
        MethodResult result = await CategoryService.SaveCategoryAsync(_categoryModel);

        if(result.Status)
        {
            _categoryModel = new();
        }

        await OnSaveCategory.InvokeAsync(result);
    }
}
